daemon off;

worker_processes 2;

error_log /dev/stderr warn;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip  on;

    # tell nginx to use the real client ip for all CIDRs
    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;

    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;

    proxy_cache_path /tmp/terrat-assets levels=1:2 keys_zone=terrat_assets:10m max_size=10g inactive=7d use_temp_path=off;

    limit_conn_zone $server_name zone=terrat_app:10m;
    limit_req_zone $binary_remote_addr zone=client_limit:10m rate=1000r/s;

    client_body_buffer_size 64k;

    # Public facing portion of the app
    server {
        listen       8080;
        ${IPV6_LISTEN}

        server_name  localhost;
        access_log   ${TERRAT_ACCESS_LOG};
        server_tokens off;

        location / {

            set $cspNonce '$request_id';
            sub_filter_once off;
            sub_filter_types *;
            sub_filter 'NGINX_CSP_NONCE' '$cspNonce';

            root /usr/local/share/terrat/ui/assets/;
            index index.html index.htm;
            try_files $uri $uri/ /index.html =404;
            add_header Content-Security-Policy "default-src 'self' https://*.posthog.com; img-src 'self' https://avatars.githubusercontent.com; script-src 'self' 'nonce-$cspNonce' https://*.posthog.com; style-src 'self'; object-src 'none'; connect-src 'self' https://*.posthog.com https://*.iconify.design https://*.unisvg.com";
        }

        location /api {
            # Limit the proxy to a lower number of concurrent requests to keep
            # the underlying application happy.
            limit_conn terrat_app 3000;
            limit_req zone=client_limit burst=5000;

            proxy_pass http://127.0.0.1:8180;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Base "$TERRAT_UI_BASE";

            # Needed for returning response with large number of headers
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

            # This is the limit of how large we of input we allow.
            client_max_body_size 50m;

            # Add a long timeout to match the timeouts on the server side.
            proxy_read_timeout 120;
        }

        # Turn off rate limit for health checks
        location /health {
            proxy_pass http://127.0.0.1:8180;
            proxy_set_header X-Forwarded-For $remote_addr;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow ::1;
            allow 127.0.0.1;
            allow 172.17.0.0/24;
            deny all;
        }
    }
}
