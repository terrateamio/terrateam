[global]
selector = [ "opam", "config", "var", "os",]

[global.release]
extra_compiler_opts = "-bin-annot -strict-sequence -strict-formats -safe-string -noassert -w '+d+f+p+u+s+40+K+L+R'"

[global.debug]
extra_compiler_opts = "-g -bin-annot -strict-sequence -strict-formats -safe-string -w '@d@f@p@u@s@40+K@L@R'"

[global.profile]
extra_compiler_opts = "-safe-string"

[global.test-release]
extra_compiler_opts = "-safe-string"

[global.test-debug]
extra_compiler_opts = "-safe-string"

[global.test-profile]
extra_compiler_opts = "-safe-string"

[src.abb_happy_eyeballs]
install = false
deps = [ "abb_future_combinators", "abb_intf", "containers", "happy-eyeballs",]

[src.terrat_github_webhooks]
install = false
deps = [ "cohttp", "containers", "json_schema", "mirage-crypto", "ppx_deriving.eq", "ppx_deriving.make", "ppx_deriving.show", "ppx_deriving_yojson", "yojson",]
extra_makefile_lines = [ "DOC_FILES:=$(wildcard $(SRC_DIR)/*.ml)",]

[src.lua_pattern_sed]
install = false
type = "exec"
deps = [ "lua_pattern",]

[src.otls_bindings]
install = true
deps = [ "ctypes", "ctypes.foreign", "ctypes.stubs",]

[src.terrat_ui_css]
install = false
compile_deps = [ "tailwindcss", "terrat_ui_site", "terrat_ui_js",]
project_type = "third-party"

[src.terrat_api]
install = false
deps = [ "containers", "json_schema", "openapi", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.make", "ppx_deriving.show", "ppx_deriving_yojson", "yojson",]
extra_makefile_lines = [ "DOC_FILES:=$(wildcard $(SRC_DIR)/*.ml)",]

[src.hcl_parser]
install = false
deps = [ "hcl_parser_value", "menhirLib",]
extra_makefile_lines = [ "include $(SRC_DIR)/files.mk",]

[src.pgsql_codec]
install = true
deps = [ "ocplib-endian", "ppx_deriving", "ppx_deriving.show", "ppx_deriving.eq",]

[src.terrat_github]
install = false
deps = [ "abb", "abbs", "containers", "githubc2", "githubc2_abb", "jwt", "openapi", "prmths", "terrat_config",]

[src.oth]
install = true
deps = [ "duration", "containers", "revops",]

[src.opentofu_mods]
install = false
deps = [ "containers", "hcl_ast",]

[src.terrat_tag_set]
install = false
deps = [ "containers", "ppx_deriving", "ppx_deriving.show",]

[src.terrat_ee]
type = "exec"
install = false
deps = [ "terrat", "terratc_ee",]

[src.showdown_js]
type = "library"
install = true
deps = [ "js_of_ocaml", "js_of_ocaml-ppx",]

[src.uritmpl]
type = "library"
install = true
deps = [ "sedlex", "sedlex.ppx", "ppx_deriving", "ppx_deriving.show", "ppx_deriving.eq", "uri",]

[src.githubc2_abb]
install = false
deps = [ "abb", "abbs", "cohttp_abb", "containers", "githubc2", "json_schema",]

[src.abb_js]
install = true
deps = [ "abb_fut_js", "abb_future_combinators", "containers", "js_of_ocaml",]

[src.abb_fut]
install = true
deps = [ "abb_intf",]
extra_makefile_lines = [ "DOC_FILES:=$(wildcard $(SRC_DIR)/*.ml $(SRC_DIR)/*.mli)",]

[src.simple_diff]
install = false

[src.terrat_change]
install = false
deps = [ "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.show", "terrat_base_repo_config_v1", "terrat_dirspace",]

[src.abbs_tls]
install = true
deps = [ "abb", "abb_tls",]

[src.kqueue_bindings_gen]
install = false
type = "exec"
deps = [ "ctypes", "ctypes.foreign", "ctypes.stubs", "kqueue_bindings",]

[src.pds_excise]
type = "exec"
project_type = "third-party"
install = false

[src.tls_server]
type = "exec"
install = false
deps = [ "containers", "unix", "otls",]

[src.snabela]
install = true
extra_ocamldep_opts = "-package sedlex"
deps = [ "process", "containers", "sedlex", "sedlex.ppx", "ppx_deriving", "ppx_deriving.show", "ppx_deriving.eq",]

[src.terrat_oss]
type = "exec"
install = false
deps = [ "terrat", "terratc_oss",]

[src.openapi]
install = false
deps = [ "json_schema",]

[src.terratc_oss]
install = false
deps = [ "abb", "abbs", "containers", "jsonu", "terrat_base_repo_config_v1", "terrat_change", "terrat_github", "terratc_intf", "yojson",]

[src.hcl_ast_cli]
install = false
type = "exec"
deps = [ "containers", "hcl_ast",]

[src.json_schema_hooks_cli]
install = false
type = "exec"
deps = [ "cmdliner", "compiler-libs.common", "containers", "json_schema_conv", "ocaml-compiler-libs.common", "ocaml-compiler-libs.shadow", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.ord", "ppx_deriving.show", "ppx_deriving_yojson", "tsort", "yojson",]

[src.jsonu]
install = false
deps = [ "abb", "abb_process", "ppx_deriving", "ppx_deriving.show", "yojson",]

[src.service_worker]
install = true
deps = [ "abb_fut_js", "abb_js", "js_of_ocaml", "js_of_ocaml-ppx",]

[src.abb_tcp_server]
install = true
deps = [ "abb_intf", "abb_channel", "abb_channel_queue",]

[src.abb_channel_queue]
install = true
deps = [ "abb_intf", "abb_channel", "abb_future_combinators",]

[src.brtl_js_nav_bar]
install = true
deps = [ "abb_js", "brtl_js", "uri",]

[src.json_schema]
install = false
deps = [ "ISO8601", "containers", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.ord", "ppx_deriving.show", "ppx_deriving_yojson", "uri", "uritmpl", "yojson",]

[src.terrat_config]
install = false
deps = [ "containers", "mirage-crypto-pk", "ppx_deriving", "ppx_deriving.show", "uri", "x509",]

[src.terratc_intf]
install = false
deps = [ "abb", "githubc2_abb", "jsonu", "ppx_deriving", "ppx_deriving.show", "terrat_base_repo_config_v1", "terrat_change", "terrat_commit_check", "terrat_config", "terrat_work_manifest3",]

[src.abb_process]
install = true
deps = [ "abb_intf", "abb_future_combinators", "containers", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.show",]

[src.brtl_js2]
install = true
deps = [ "abb_js", "brr", "furi", "note", "note.brr", "uri",]

[src.abb_js_xmlhttprequest]
install = true
deps = [ "abb_fut_js", "js_of_ocaml", "js_of_ocaml-ppx",]

[src.tabler_icons]
install = true
deps = ["brtl_js2"]

[src.githubc2]
install = false
deps = [ "containers", "json_schema", "openapi", "ppx_deriving.eq", "ppx_deriving.make", "ppx_deriving.show", "ppx_deriving_yojson",]
extra_makefile_lines = [ "DOC_FILES:=$(wildcard $(SRC_DIR)/*.ml)",]

[src.terrat_ui_site]
install = false
type = "exec"
compile_deps = [ "terrat_ui_js",]
project_type = "third-party"

[src.prmths]
type = "library"
install = false
deps = [ "abb", "abbs", "asetmap", "astring", "fmt", "re",]

[src.terrat_code_indexer]
install = false
type = "exec"
deps = [ "cmdliner", "containers", "opentofu_mods", "path_glob", "ppx_deriving", "ppx_deriving.show", "ppx_deriving_yojson", "yojson",]

[src.brtl_js]
install = true
deps = [ "abb_js", "furi", "js_of_ocaml", "js_of_ocaml-ppx", "js_of_ocaml-tyxml", "ppx_deriving", "ppx_deriving.ord", "react", "reactiveData", "uri", "uuidm",]

[src.data_mig]
install = true
deps = [ "abbs", "containers",]

[src.brtl_permissions]
install = true
deps = [ "abbs", "brtl", "brtl_ep", "containers",]

[src.abb_js_fetch]
install = true
deps = [ "abb_fut_js", "brr", "containers",]

[src.brtl_static]
install = true
deps = [ "abbs", "brtl", "magic-mime",]

[src.terrat_ui_js_cache]
install = false

[src.abb_service_local]
install = true
deps = [ "abb_channel", "abb_channel_queue",]

[src.terratc_ee]
install = false
deps = [ "abb", "abbs", "containers", "jsonu", "terrat_base_repo_config_v1", "terrat_github", "terratc_intf", "yojson",]

[src.terrat_commit_check]
install = false
deps = [ "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.make", "ppx_deriving.show",]

[src.brtl_ep]
install = true
deps = [ "abbs", "brtl",]

[src.markdown_it]
type = "library"
install = true
deps = [ "js_of_ocaml", "js_of_ocaml-ppx",]

[src.abb_scheduler_select]
install = true
deps = [ "abb_fut", "abb_intf", "abb_thread_pool", "containers", "iter", "mtime.clock.os", "ppx_deriving", "ppx_deriving.ord", "unix",]

[src.abb_cache]
install = true
deps = [
     "abb",
     "abb_future_combinators",
     "abb_intf",
     "containers",
     "duration",
     "lru",
]

[src.jwk]
install = true
deps = [ "containers", "yojson",]

[src.pgsql_pool]
install = true
deps = [ "abb", "abbs", "containers", "pgsql_io",]

[src.localforage]
install = false
deps = [ "abb_fut_js", "containers", "js_of_ocaml", "js_of_ocaml-ppx",]

[src.brtl_hello_world]
install = false
type = "exec"
deps = [ "abb", "brtl", "brtl_mw_log", "containers", "logs", "logs.fmt",]

[src.terrat_sql_of_tag_query]
install = false
deps = [
     "containers",
     "terrat_tag_query_parser_value",
     "yojson",
]

[src.terrat]
install = false
deps = [
     "ISO8601",
     "abb",
     "abb_cache",
     "abb_flow",
     "abb_happy_eyeballs",
     "abb_process",
     "abbs",
     "abbs_tls",
     "base64",
     "brtl",
     "brtl_ep",
     "brtl_mw_log",
     "brtl_mw_session",
     "brtl_pagination",
     "brtl_permissions",
     "brtl_static",
     "cmdliner",
     "containers",
     "containers-data",
     "containers.bencode",
     "data_mig",
     "git_config",
     "githubc2",
     "githubc2_abb",
     "iter",
     "jsonu",
     "jwt",
     "logs",
     "logs.cli",
     "logs.fmt",
     "lru",
     "lua_pattern",
     "mirage-crypto-pk",
     "mirage-crypto-rng.unix",
     "path_glob",
     "pgsql_pagination",
     "pgsql_pool",
     "ppx_deriving",
     "ppx_deriving.eq",
     "ppx_deriving.ord",
     "ppx_deriving.show",
     "prmths",
     "sha",
     "terrat_api",
     "terrat_base_repo_config_v1",
     "terrat_change",
     "terrat_commit_check",
     "terrat_config",
     "terrat_data",
     "terrat_dirspace",
     "terrat_files",
     "terrat_github",
     "terrat_github_webhooks",
     "terrat_plan_diff",
     "terrat_repo_config",
     "terrat_sql_of_tag_query",
     "terrat_tag_query",
     "terrat_tag_query_ast",
     "terrat_tag_query_lexer",
     "terrat_tag_query_parser",
     "terrat_tag_set",
     "terrat_work_manifest3",
     "terratc_intf",
     "tsort",
     "uuidm",
     "x509",
]

[src.lua_pattern_cli]
install = false
type = "exec"
deps = [ "lua_pattern",]

[src.abb_dns]
install = true
deps = [ "abb_future_combinators", "abb_intf", "abb_io", "cstruct", "dns-client", "dns-client.resolvconf", "logs", "mirage-crypto-rng.unix", "mtime", "mtime.clock.os",]

[src.jwt]
install = true
deps = [ "base64", "containers", "mirage-crypto", "mirage-crypto-pk", "yojson",]

[src.abb_fut_js]
install = true
deps = [ "abb_fut", "js_of_ocaml", "js_of_ocaml-ppx",]

[src.terrat_tag_query_lexer]
install = false
deps = [ "sedlex", "sedlex.ppx", "terrat_tag_query_parser",]

[src.terrat_ui]
type = "exec"
install = false
deps = [ "cmdliner", "terrat_ui_files",]

[src.otls_bindings_gen]
install = false
type = "exec"
deps = [ "ctypes", "ctypes.foreign", "ctypes.stubs", "otls_bindings",]

[src.pgsql_io]
install = true
deps = [ "abb", "abb_intf", "abbs", "abbs_tls", "containers", "num", "pgsql_codec", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.show", "uuidm", "zarith",]

[src.terrat_ui_files]
install = false
compile_deps = [ "terrat_ui_css", "terrat_ui_site", "terrat_ui_js",]
extra_makefile_lines = [ "include $(SRC_DIR)/files.mk",]

[src.brtl_mw_log]
install = true
deps = [ "abb_intf", "brtl", "cohttp", "logs", "uri",]

[src.openapi_cli]
install = false
type = "exec"
deps = [ "cmdliner", "openapi_conv",]

[src.abb]
install = true
deps = [ "abb_intf", "abb_scheduler_select",]
extra_makefile_lines = [ "include $(SRC_DIR)/abb_other.mk",]

[src.abb_future_combinators]
install = true
deps = [ "abb_intf",]

[src.abb_scheduler_nyi]
install = false
deps = [ "abb_intf", "abb_fut",]

[src.abb_time]
install = true
deps = [ "containers",]

[src.brtl_pagination]
install = true
deps = [ "containers", "uri",]

[src.terrat_ui_sw]
install = false
type = "exec"
deps = [ "abb_fut_js", "brtl_js", "terrat_ui_js_cache", "js_of_ocaml", "js_of_ocaml-ppx", "service_worker",]
extra_makefile_lines = [ "OCAMLC_LINK_OPTS=", "OCAMLOPT_LINK_OPTS=", "all: terrat_ui_sw.js", "terrat_ui_sw.js: $(BYTE_TARGET)", "\tjs_of_ocaml $(shell env OCAMLPATH=$(OCAMLPATH) ocamlfind query -r -format '%+(jsoo_runtime)' -separator ' ' $(PACKAGES)) terrat_ui_sw.byte",]

[src.cohttp_abb]
install = true
deps = [ "abb_channel", "abb_channel_queue", "abb_future_combinators", "abb_happy_eyeballs", "abb_intf", "abb_io", "abb_tls", "cohttp", "containers", "duration", "oth", "oth_abb", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.show", "uri",]

[src.abb_thread_pool]
install = true

[src.abb_keyed_concurrent_executor]
install = true
deps = [
     "abb_future_combinators",
     "abb_intf",
     "abb_service_local",
     "containers",
]

[src.json_schema_conv]
install = false
deps = [ "compiler-libs.common", "containers", "ocaml-compiler-libs.common", "ocaml-compiler-libs.shadow", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.ord", "ppx_deriving.show", "ppx_deriving_yojson", "yojson",]

[src.abb_io]
install = true
deps = [ "abb_intf", "abb_future_combinators", "containers", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.show",]

[src.brtl]
install = true
deps = [ "abb_intf", "abbs", "cohttp_abb", "hmap", "logs", "snabela", "uri", "uuidm", "yojson",]

[src.furi]
install = true
deps = [ "containers", "uri",]

[src.git_config]
type = "library"
install = true
deps = [ "containers", "ppx_deriving", "ppx_deriving.ord", "ppx_deriving.show", "sedlex", "sedlex.ppx",]

[src.abb_flow]
install = true
deps = [ "abb_future_combinators", "abb_intf", "containers", "containers.bencode", "yojson",]

[src.terrat_ui_js]
type = "exec"
install = false
deps = [
     "abb_fut_js",
     "abb_js",
     "abb_js_fetch",
     "brtl_js2",
     "duration",
     "hljs",
     "tabler_icons",
     "terrat_api",
     "terrat_data",
     "terrat_dirspace",
     "terrat_plan_diff",
]
extra_makefile_lines = [ "OCAMLC_LINK_OPTS=", "OCAMLOPT_LINK_OPTS=", "all: terrat_ui_js.js", "terrat_ui_js.js: $(BYTE_TARGET)", "\tjs_of_ocaml $(shell env OCAMLPATH=$(OCAMLPATH) ocamlfind query -r -format '%+(jsoo_runtime)' -separator ' ' $(PACKAGES)) terrat_ui_js.byte",]

[src.terrat_tag_query_ast]
install = false
deps = [ "containers", "ppx_deriving", "ppx_deriving.show", "terrat_tag_query_lexer", "terrat_tag_query_parser", "terrat_tag_query_parser_value",]

[src.terrat_base_repo_config_v1]
install = false
deps = [ "containers", "containers-data", "iter", "lua_pattern", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.make", "ppx_deriving.show", "ppx_deriving_yojson", "terrat_data", "terrat_repo_config", "terrat_tag_query", "yojson",]

[src.terrat_tag_query_parser]
install = false
deps = [ "menhirLib", "sedlex", "terrat_tag_query_parser_value",]
extra_makefile_lines = [ "include $(SRC_DIR)/files.mk",]

[src.terrat_work_manifest3]
install = false
deps = [ "terrat_base_repo_config_v1", "terrat_change", "terrat_tag_query", "uuidm",]

[src.terrat_plan_diff]
install = false
deps = [
     "containers",
     "lua_pattern",
]

[src.githubc2_cli]
type = "exec"
install = false
deps = [ "abb", "abbs", "githubc2", "githubc2_abb", "otls",]

[src.tailwindcss]
install = false
project_type = "third-party"

[src.abb_scheduler_kqueue]
install = true
build = false

[src.terrat_repo_config]
install = false
deps = [ "json_schema", "ppx_deriving.eq", "ppx_deriving.make", "ppx_deriving.show", "ppx_deriving_yojson", "yojson",]

[src.terrat_tag_query]
install = false
deps = [ "containers", "path_glob", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.show", "terrat_dirspace", "terrat_tag_query_ast", "terrat_tag_set",]

[src.openapi_conv]
install = false
deps = [ "compiler-libs.common", "containers", "json_schema_conv", "ocaml-compiler-libs.common", "ocaml-compiler-libs.shadow", "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.ord", "ppx_deriving.show", "ppx_deriving_yojson", "tsort", "yojson",]

[src.abb_intf]
install = true
deps = [ "ppx_deriving", "ppx_deriving.show", "ppx_deriving.eq",]
extra_makefile_lines = [ "DOC_FILES:=$(wildcard $(SRC_DIR)/*_intf.ml)",]

[src.otls]
install = true
compile_deps = [ "otls_bindings_gen",]
deps = [ "ctypes", "ctypes.foreign", "otls_bindings",]
extra_makefile_lines = [ "include $(SRC_DIR)/otls.mk",]
meta_linkopts = "-cclib -ltls"
extra_compiler_opts = "-strict-sequence -strict-formats -safe-string -noassert -ccopt \"$(shell pkg-config --cflags libtls)\""

[src.brtl_mw_session]
install = true
deps = [ "abb_intf", "brtl",]

[src.kqueue_bindings]
install = true
deps = [ "ctypes", "ctypes.foreign", "ctypes.stubs",]

[src.pgsql_pagination]
install = true
deps = [ "abb", "abbs", "containers", "pgsql_io",]

[src.terrat_files]
install = false
extra_makefile_lines = [ "include $(SRC_DIR)/files.mk",]

[src.revops]
install = true
deps = [ "containers",]

[src.abb_channel]
install = true
deps = [ "abb_intf", "abb_future_combinators",]
extra_makefile_lines = [ "DOC_FILES:=$(wildcard *_intf.ml) $(wildcard *.mli)",]

[src.jwk_fetch]
install = true
deps = [ "abb", "abbs", "cohttp_abb", "jwk", "uri",]

[src.dns_cli]
install = false
type = "exec"
deps = [ "abb", "abbs", "abb_dns",]

[src.terrat_tag_query_parser_value]
install = false
deps = []

[src.pgsql_test_client]
type = "exec"
install = false
deps = [ "ISO8601", "abb", "abbs", "logs", "oth", "oth_abb", "pgsql_io",]

[src.abb_service_serializer]
install = true
deps = [ "abb_channel", "abb_service_local",]

[src.abb_tls]
install = true
deps = [ "abb_future_combinators", "abb_intf", "abb_io", "otls", "ppx_deriving", "ppx_deriving.show", "unix",]

[src.terrat_dirspace]
install = false
deps = [ "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.ord", "ppx_deriving.show",]

[src.hcl_ast]
install = false
deps = [ "containers", "hcl_lexer", "hcl_parser", "hcl_parser_value", "ppx_deriving", "ppx_deriving.show",]

[src.hcl_lexer]
install = false
deps = [ "containers", "hcl_parser", "sedlex", "sedlex.ppx",]

[src.terrat_data]
install = false
deps = [ "containers", "ppx_deriving", "ppx_deriving.show", "terrat_dirspace",]

[src.oth_abb]
install = true
deps = [ "containers", "duration", "oth", "abb_intf", "abb_future_combinators",]

[src.tls_client]
type = "exec"
install = false
deps = [ "containers", "unix", "otls",]

[src.hcl_parser_value]
install = false
deps = [ "ppx_deriving", "ppx_deriving.eq", "ppx_deriving.show", "ppx_deriving_yojson", "yojson",]

[src.abb_test]
install = true
deps = [ "containers", "oth", "oth_abb", "abb_intf", "abb_future_combinators",]
extra_compiler_opts = "-bin-annot -strict-sequence -strict-formats -safe-string"

[src.lua_pattern]
install = true

[src.kqueue]
install = true
deps = [ "ctypes", "ctypes.foreign", "kqueue_bindings",]
compile_deps = [ "kqueue_bindings_gen ",]
extra_makefile_lines = [ "include $(SRC_DIR)/kqueue.mk",]

[src.snabela_cli]
install = true
type = "exec"
install_cmd = "cp -vf snabela_cli.native $(PREFIX)/bin/snabela"
remove_cmd = "rm -vf $(PREFIX)/bin/snabela"
deps = [ "cmdliner", "containers", "process", "toml", "snabela",]

[src.abbs]
install = true
deps = [
     "abb",
     "abb_cache",
     "abb_channel",
     "abb_channel_queue",
     "abb_future_combinators",
     "abb_happy_eyeballs",
     "abb_io",
     "abb_service_local",
     "abb_service_serializer",
     "abb_tcp_server",
     "abb_time",
]

[src.hljs]
install = false
deps = ["brtl_js2"]

[src.opentofu_mods_cli]
install = false
type = "exec"
deps = [ "cmdliner", "containers", "opentofu_mods", "path_glob", "ppx_deriving", "ppx_deriving.show", "ppx_deriving_yojson", "yojson",]

[tests.abb_tls]
deps = [ "containers", "uri", "abb_scheduler_select", "abb_tls", "cohttp_abb",]

[tests.abb_time]
deps = [ "unix", "mtime.clock.os", "oth", "abb_time",]

[tests.abb_scheduler_select]
deps = [ "abb_intf", "abb_fut", "abb_test", "abb_scheduler_select",]

[tests.abb_scheduler_kqueue]
build = false

[tests.cohttp_abb]
deps = [ "uri", "oth", "oth_abb", "abb_scheduler_select", "cohttp_abb",]

[tests.lua_pattern]
deps = [ "containers", "qcheck", "oth", "lua_pattern",]

[tests.abb_flow]
deps = [ "abb_flow", "abb_scheduler_select", "containers", "oth_abb",]

[tests.abb_thread_pool]
deps = [ "unix", "oth", "abb_thread_pool",]

[tests.revops_ordering]
deps = [ "revops",]

[tests.pgsql_io]
deps = [ "pgsql_io", "oth",]

[tests.terrat]
deps = [ "containers", "oth", "terrat",]

[tests.terrat_github_webhooks]
deps = [ "terrat_github_webhooks", "oth",]

[tests.abb_service_local]
deps = [ "oth", "abb_fut", "abb_channel", "abb_service_local",]

[tests.hcl_ast]
deps = [ "containers", "oth", "hcl_ast",]
extra_makefile_lines = [ "export SRC_DIR",]

[tests.kqueue]
deps = [ "oth", "kqueue",]

[tests.abb_io]
deps = [ "oth_abb", "abb_scheduler_select", "abb_io",]

[tests.snabela]
deps = [ "containers", "oth", "snabela",]

[tests.furi]
deps = [ "uri", "furi", "oth",]

[tests.revops_undo]
deps = [ "revops",]

[tests.jsonu]
deps = [ "jsonu", "oth", "yojson",]

[tests.revops_temp_file]
deps = [ "containers", "revops",]

[tests.abb_channel_queue_fut]
deps = [ "oth", "abb_fut", "abb_channel", "abb_channel_queue",]

[tests.git_config]
deps = [ "oth", "git_config",]

[tests.abb_fut]
deps = [ "oth", "abb_intf", "abb_fut",]

[tests.jwt]
deps = [ "containers", "jwt", "oth", "x509", "mirage-crypto-rng.unix",]

[tests.simple_diff]
deps = [ "oth", "simple_diff",]

[tests.uritmpl]
deps = [ "uritmpl", "oth",]

[tests.pgsql_codec]
deps = [ "pgsql_codec", "oth",]

[tests.otls]
deps = [ "oth", "otls",]

[tests.abb_future_combinators]
deps = [ "oth", "abb_intf", "abb_fut", "abb_future_combinators",]

[tests.abb_keyed_concurrent_executor]
deps = [ "oth", "abb_intf", "abb_fut", "containers", "abb_keyed_concurrent_executor" ]

[tests.oth]
deps = [ "oth",]

[src.terrat_ui_sw.debug]
extra_makefile_lines = [ "OCAMLC_LINK_OPTS=", "OCAMLOPT_LINK_OPTS=", "all: terrat_ui_sw.js", "terrat_ui_sw.js: $(BYTE_TARGET)", "\tjs_of_ocaml --pretty --source-map-inline $(shell env OCAMLPATH=$(OCAMLPATH) ocamlfind query -r -format '%+(jsoo_runtime)' -separator ' ' $(PACKAGES)) terrat_ui_sw.byte",]

[src.terrat_ui_sw.profile]
extra_makefile_lines = [ "OCAMLC_LINK_OPTS=", "OCAMLOPT_LINK_OPTS=", "all: terrat_ui_sw.js", "terrat_ui_sw.js: $(BYTE_TARGET)", "\tjs_of_ocaml --pretty --source-map-inline $(shell env OCAMLPATH=$(OCAMLPATH) ocamlfind query -r -format '%+(jsoo_runtime)' -separator ' ' $(PACKAGES)) terrat_ui_sw.byte",]

[src.terrat_ui_js.debug]
extra_makefile_lines = [ "OCAMLC_LINK_OPTS=", "OCAMLOPT_LINK_OPTS=", "all: terrat_ui_js.js", "terrat_ui_js.js: $(BYTE_TARGET)", "\tjs_of_ocaml --pretty --source-map-inline $(shell env OCAMLPATH=$(OCAMLPATH) ocamlfind query -r -format '%+(jsoo_runtime)' -separator ' ' $(PACKAGES)) terrat_ui_js.byte",]

[src.terrat_ui_js.profile]
extra_makefile_lines = [ "OCAMLC_LINK_OPTS=", "OCAMLOPT_LINK_OPTS=", "all: terrat_ui_js.js", "terrat_ui_js.js: $(BYTE_TARGET)", "\tjs_of_ocaml --pretty --source-map-inline $(shell env OCAMLPATH=$(OCAMLPATH) ocamlfind query -r -format '%+(jsoo_runtime)' -separator ' ' $(PACKAGES)) terrat_ui_js.byte",]

[src.otls.debug]
extra_compiler_opts = "-g -strict-sequence -strict-formats -safe-string -ccopt \"$(shell pkg-config --cflags libtls)\""

[src.otls.profile]
extra_compiler_opts = "-g -strict-sequence -strict-formats -safe-string -ccopt \"$(shell pkg-config --cflags libtls)\""

[src.abb_test.debug]
extra_compiler_opts = "-g -bin-annot -strict-sequence -strict-formats -safe-string -w '@d@f@p@u@s@40'"

[src.abb_test.profile]
extra_compiler_opts = "-g -bin-annot -strict-sequence -strict-formats -safe-string -w '@d@f@p@u@s@40'"

[src.abb.selector.freebsd]
deps = [ "abb_intf", "abb_scheduler_kqueue",]
extra_makefile_lines = [ "include $(SRC_DIR)/abb_kqueue.mk",]

[src.abb.selector.linux]
deps = [ "abb_intf", "abb_scheduler_kqueue",]
extra_makefile_lines = [ "include $(SRC_DIR)/abb_kqueue.mk",]

[src.abb_scheduler_kqueue.selector.freebsd]
build = true
deps = [ "abb_fut", "abb_intf", "abb_thread_pool", "containers", "iter", "kqueue", "mtime.clock.os", "ppx_deriving", "ppx_deriving.ord", "unix",]

[src.abb_scheduler_kqueue.selector.linux]
build = true
deps = [ "abb_fut", "abb_intf", "abb_thread_pool", "containers", "iter", "kqueue", "mtime.clock.os", "ppx_deriving", "ppx_deriving.ord", "unix",]

[src.kqueue.selector.linux]
meta_linkopts = "-cclib -lkqueue"
extra_compiler_opts = "-strict-sequence -strict-formats -safe-string -noassert -ccopt -I/usr/include/kqueue"

[tests.abb_scheduler_kqueue.selector.freebsd]
build = true
deps = [ "abb_intf", "abb_test", "abb_scheduler_kqueue",]

[tests.abb_scheduler_kqueue.selector.linux]
build = true
deps = [ "abb_intf", "abb_test", "abb_scheduler_kqueue",]

[src.kqueue.selector.linux.debug]
meta_linkopts = "-cclib -lkqueue"
extra_compiler_opts = "-g -strict-sequence -strict-formats -safe-string -w '@d@f@p@u@s@40' -ccopt -I/usr/include/kqueue"

[tests.terrat_sql_of_tag_query]
deps = [
     "containers",
     "oth",
     "terrat_sql_of_tag_query",
     "terrat_tag_query_ast",
]

[tests.abb_cache]
deps = [
     "abb_cache",
     "abb_scheduler_select",
     "containers",
     "oth_abb",
]
