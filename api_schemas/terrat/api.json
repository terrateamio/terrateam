{
  "components": {
    "parameters": {},
    "responses": {},
    "schemas": {
      "dirspace-state": {
        "enum": [
          "aborted",
          "failure",
          "queued",
          "running",
          "success",
          "unknown"
        ],
        "type": "string"
      },
      "error": {
        "additionalProperties": false,
        "properties": {
          "msg": {
            "type": "string"
          }
        },
        "required": [
          "msg"
        ],
        "type": "object"
      },
      "hook-outputs": {
        "additionalProperties": false,
        "properties": {
          "post": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/workflow-output-drift-create-issue"
                },
                {
                  "$ref": "#/components/schemas/workflow-output-run"
                },
                {
                  "$ref": "#/components/schemas/workflow-output-env"
                },
                {
                  "$ref": "#/components/schemas/workflow-output-oidc"
                }
              ]
            },
            "type": "array"
          },
          "pre": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/workflow-output-run"
                },
                {
                  "$ref": "#/components/schemas/workflow-output-env"
                },
                {
                  "$ref": "#/components/schemas/workflow-output-checkout"
                },
                {
                  "$ref": "#/components/schemas/workflow-output-cost-estimation"
                },
                {
                  "$ref": "#/components/schemas/workflow-output-oidc"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "pre",
          "post"
        ],
        "type": "object"
      },
      "installation": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/installation-type-github"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object"
      },
      "installation-dirspace": {
        "additionalProperties": false,
        "properties": {
          "base_branch": {
            "type": "string"
          },
          "base_ref": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "branch_ref": {
            "type": "string"
          },
          "completed_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/kind-drift"
              },
              {
                "$ref": "#/components/schemas/kind-index"
              },
              {
                "$ref": "#/components/schemas/kind-pull-request"
              }
            ]
          },
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "run_id": {
            "type": "string"
          },
          "run_type": {
            "$ref": "#/components/schemas/run-type"
          },
          "state": {
            "$ref": "#/components/schemas/dirspace-state"
          },
          "tag_query": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "workspace": {
            "type": "string"
          }
        },
        "required": [
          "base_branch",
          "base_ref",
          "branch",
          "branch_ref",
          "created_at",
          "dir",
          "dirspaces",
          "id",
          "kind",
          "owner",
          "ref",
          "repo",
          "run_type",
          "state",
          "tag_query",
          "workspace"
        ],
        "type": "object"
      },
      "installation-pull-request": {
        "additionalProperties": false,
        "properties": {
          "base_branch": {
            "type": "string"
          },
          "base_sha": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "latest_work_manifest_run_at": {
            "type": "string"
          },
          "merged_at": {
            "type": "string"
          },
          "merged_sha": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "pull_number": {
            "type": "integer"
          },
          "repository": {
            "type": "integer"
          },
          "sha": {
            "type": "string"
          },
          "state": {
            "enum": [
              "open",
              "closed",
              "merged"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        },
        "required": [
          "base_branch",
          "base_sha",
          "branch",
          "name",
          "owner",
          "pull_number",
          "repository",
          "sha",
          "state"
        ],
        "type": "object"
      },
      "installation-repo": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "installation_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "setup": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "installation_id",
          "name",
          "setup",
          "updated_at"
        ],
        "type": "object"
      },
      "installation-type-github": {
        "const": "github",
        "type": "string"
      },
      "installation-work-manifest": {
        "additionalProperties": false,
        "properties": {
          "base_branch": {
            "type": "string"
          },
          "base_ref": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "branch_ref": {
            "type": "string"
          },
          "completed_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "dirspaces": {
            "items": {
              "$ref": "#/components/schemas/work-manifest-dirspace"
            },
            "type": "array"
          },
          "environment": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/kind-drift"
              },
              {
                "$ref": "#/components/schemas/kind-index"
              },
              {
                "$ref": "#/components/schemas/kind-pull-request"
              }
            ]
          },
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "run_id": {
            "type": "string"
          },
          "run_type": {
            "$ref": "#/components/schemas/run-type"
          },
          "state": {
            "$ref": "#/components/schemas/work-manifest-state"
          },
          "tag_query": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        },
        "required": [
          "base_branch",
          "base_ref",
          "branch",
          "branch",
          "branch_ref",
          "created_at",
          "dirspaces",
          "id",
          "kind",
          "owner",
          "ref",
          "repo",
          "repository",
          "run_type",
          "state",
          "tag_query"
        ],
        "type": "object"
      },
      "installation-work-manifest-target-pull-request": {
        "additionalProperties": false,
        "properties": {
          "pull_number": {
            "type": "integer"
          },
          "pull_request_title": {
            "type": "string"
          }
        },
        "required": [
          "pull_number"
        ],
        "type": "object"
      },
      "installation-workflow-step-output": {
        "additionalProperties": false,
        "properties": {
          "created_at": {
            "type": "string"
          },
          "idx": {
            "type": "integer"
          },
          "ignore_errors": {
            "type": "boolean"
          },
          "payload": {
            "additionalProperties": {
              "type": null
            },
            "properties": {},
            "type": "object"
          },
          "scope": {
            "$ref": "#/components/schemas/workflow-step-output-scope"
          },
          "state": {
            "type": "string"
          },
          "step": {
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "idx",
          "ignore_errors",
          "location",
          "payload",
          "scope",
          "state",
          "step"
        ],
        "type": "object"
      },
      "kind-drift": {
        "const": "drift",
        "type": "string"
      },
      "kind-index": {
        "const": "index",
        "type": "string"
      },
      "kind-pull-request": {
        "additionalProperties": false,
        "properties": {
          "pull_number": {
            "type": "integer"
          },
          "pull_request_title": {
            "type": "string"
          }
        },
        "required": [
          "pull_number"
        ],
        "type": "object"
      },
      "output-cost-estimation": {
        "additionalProperties": false,
        "properties": {
          "cost_estimation": {
            "additionalProperties": false,
            "properties": {
              "currency": {
                "type": "string"
              },
              "diff_monthly_cost": {
                "type": "number"
              },
              "dirspaces": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "diff_monthly_cost": {
                      "type": "number"
                    },
                    "path": {
                      "type": "string"
                    },
                    "prev_monthly_cost": {
                      "type": "number"
                    },
                    "total_monthly_cost": {
                      "type": "number"
                    },
                    "workspace": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "workspace",
                    "prev_monthly_cost",
                    "total_monthly_cost",
                    "diff_monthly_cost"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "prev_monthly_cost": {
                "type": "number"
              },
              "total_monthly_cost": {
                "type": "number"
              }
            },
            "required": [
              "prev_monthly_cost",
              "total_monthly_cost",
              "diff_monthly_cost",
              "currency",
              "dirspaces"
            ],
            "type": "object"
          }
        },
        "required": [
          "cost_estimation"
        ],
        "type": "object"
      },
      "output-plan": {
        "additionalProperties": false,
        "properties": {
          "has_changes": {
            "default": true,
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "plan_text": {
            "type": "string"
          }
        },
        "required": [
          "plan",
          "plan_text"
        ],
        "type": "object"
      },
      "output-text": {
        "additionalProperties": false,
        "properties": {
          "output_key": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "type": "object"
      },
      "plan-create": {
        "additionalProperties": false,
        "properties": {
          "has_changes": {
            "default": true,
            "type": "boolean"
          },
          "path": {
            "type": "string"
          },
          "plan_data": {
            "type": "string"
          },
          "workspace": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "workspace",
          "plan_data"
        ],
        "type": "object"
      },
      "run-kind-data-pull-request": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "run-type": {
        "enum": [
          "apply",
          "build-config",
          "index",
          "plan"
        ],
        "type": "string"
      },
      "server-config": {
        "additionalProperties": false,
        "properties": {
          "github_api_base_url": {
            "type": "string"
          },
          "github_app_client_id": {
            "type": "string"
          },
          "github_app_url": {
            "type": "string"
          },
          "github_web_base_url": {
            "type": "string"
          }
        },
        "required": [
          "github_api_base_url",
          "github_app_client_id",
          "github_app_url",
          "github_web_base_url"
        ],
        "type": "object"
      },
      "task": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "enum": [
              "aborted",
              "pending",
              "running",
              "completed",
              "failed"
            ],
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "state",
          "updated_at"
        ],
        "type": "object"
      },
      "user": {
        "additionalProperties": false,
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "work-manifest": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/work-manifest-plan"
          },
          {
            "$ref": "#/components/schemas/work-manifest-apply"
          },
          {
            "$ref": "#/components/schemas/work-manifest-index"
          },
          {
            "$ref": "#/components/schemas/work-manifest-unsafe-apply"
          },
          {
            "$ref": "#/components/schemas/work-manifest-build-config"
          },
          {
            "$ref": "#/components/schemas/work-manifest-done"
          }
        ]
      },
      "work-manifest-apply": {
        "additionalProperties": false,
        "properties": {
          "base_ref": {
            "type": "string"
          },
          "changed_dirspaces": {
            "items": {
              "$ref": "#/components/schemas/work-manifest-dir"
            },
            "type": "array"
          },
          "config": {
            "type": null
          },
          "result_version": {
            "type": "integer"
          },
          "run_kind": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "type": {
            "const": "apply",
            "type": "string"
          }
        },
        "required": [
          "base_ref",
          "changed_dirspaces",
          "config",
          "result_version",
          "run_kind",
          "token",
          "type"
        ],
        "type": "object"
      },
      "work-manifest-build-config": {
        "additionalProperties": false,
        "properties": {
          "base_ref": {
            "type": "string"
          },
          "config": {
            "type": null
          },
          "token": {
            "type": "string"
          },
          "type": {
            "const": "build-config",
            "type": "string"
          }
        },
        "required": [
          "base_ref",
          "config",
          "token",
          "type"
        ],
        "type": "object"
      },
      "work-manifest-build-config-result": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/work-manifest-build-config-result-success"
          },
          {
            "$ref": "#/components/schemas/work-manifest-build-config-result-failure"
          }
        ]
      },
      "work-manifest-build-config-result-failure": {
        "additionalProperties": false,
        "properties": {
          "msg": {
            "type": "string"
          }
        },
        "required": [
          "msg"
        ],
        "type": "object"
      },
      "work-manifest-build-config-result-success": {
        "additionalProperties": false,
        "properties": {
          "config": {
            "type": null
          }
        },
        "required": [
          "config"
        ],
        "type": "object"
      },
      "work-manifest-dir": {
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string"
          },
          "rank": {
            "description": "Starts at 0, relative dependency order to perform operation on dir.",
            "type": "integer"
          },
          "workflow": {
            "type": "integer"
          },
          "workspace": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "workspace",
          "rank"
        ],
        "type": "object"
      },
      "work-manifest-dirspace": {
        "additionalProperties": false,
        "properties": {
          "dir": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string"
          }
        },
        "required": [
          "dir",
          "workspace"
        ],
        "type": "object"
      },
      "work-manifest-dirspace-result": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/workflow-outputs"
          },
          "path": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "workspace",
          "success",
          "outputs"
        ],
        "type": "object"
      },
      "work-manifest-dirspace-results": {
        "items": {
          "$ref": "#/components/schemas/work-manifest-dirspace-result"
        },
        "type": "array"
      },
      "work-manifest-done": {
        "additionalProperties": false,
        "properties": {
          "type": {
            "const": "done",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "work-manifest-index": {
        "additionalProperties": false,
        "properties": {
          "base_ref": {
            "type": "string"
          },
          "config": {
            "type": null
          },
          "dirs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          },
          "type": {
            "const": "index",
            "type": "string"
          }
        },
        "required": [
          "base_ref",
          "config",
          "dirs",
          "token",
          "type"
        ],
        "type": "object"
      },
      "work-manifest-index-paths": {
        "additionalProperties": {
          "additionalProperties": false,
          "properties": {
            "failures": {
              "additionalProperties": {
                "additionalProperties": false,
                "properties": {
                  "lnum": {
                    "type": "integer"
                  },
                  "msg": {
                    "type": "string"
                  }
                },
                "required": [
                  "msg"
                ],
                "type": "object"
              },
              "type": "object"
            },
            "modules": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "failures",
            "modules"
          ],
          "type": "object"
        },
        "type": "object"
      },
      "work-manifest-index-result": {
        "additionalProperties": false,
        "properties": {
          "paths": {
            "$ref": "#/components/schemas/work-manifest-index-paths"
          },
          "success": {
            "type": "boolean"
          },
          "symlinks": {
            "$ref": "#/components/schemas/work-manifest-index-symlinks"
          },
          "version": {
            "const": 1,
            "type": "integer"
          }
        },
        "required": [
          "paths",
          "success",
          "version"
        ],
        "type": "object"
      },
      "work-manifest-index-symlinks": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "work-manifest-initiate": {
        "additionalProperties": false,
        "properties": {
          "run_id": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          }
        },
        "required": [
          "run_id",
          "sha"
        ],
        "type": "object"
      },
      "work-manifest-plan": {
        "additionalProperties": false,
        "properties": {
          "base_dirspaces": {
            "items": {
              "$ref": "#/components/schemas/work-manifest-dir"
            },
            "type": "array"
          },
          "base_ref": {
            "type": "string"
          },
          "changed_dirspaces": {
            "items": {
              "$ref": "#/components/schemas/work-manifest-dir"
            },
            "type": "array"
          },
          "config": {
            "type": null
          },
          "dirspaces": {
            "items": {
              "$ref": "#/components/schemas/work-manifest-dir"
            },
            "type": "array"
          },
          "result_version": {
            "type": "integer"
          },
          "run_kind": {
            "type": "string"
          },
          "run_kind_data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/run-kind-data-pull-request"
              }
            ]
          },
          "token": {
            "type": "string"
          },
          "type": {
            "const": "plan",
            "type": "string"
          }
        },
        "required": [
          "base_dirspaces",
          "base_ref",
          "changed_dirspaces",
          "config",
          "dirspaces",
          "result_version",
          "run_kind",
          "token",
          "type"
        ],
        "type": "object"
      },
      "work-manifest-result": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/work-manifest-index-result"
          },
          {
            "$ref": "#/components/schemas/work-manifest-build-config-result"
          },
          {
            "$ref": "#/components/schemas/work-manifest-tf-operation-result"
          },
          {
            "$ref": "#/components/schemas/work-manifest-tf-operation-result2"
          }
        ]
      },
      "work-manifest-state": {
        "enum": [
          "aborted",
          "completed",
          "queued",
          "running"
        ],
        "type": "string"
      },
      "work-manifest-tf-operation-result": {
        "additionalProperties": false,
        "properties": {
          "dirspaces": {
            "$ref": "#/components/schemas/work-manifest-dirspace-results"
          },
          "overall": {
            "additionalProperties": false,
            "properties": {
              "outputs": {
                "$ref": "#/components/schemas/hook-outputs"
              },
              "success": {
                "type": "boolean"
              }
            },
            "required": [
              "success",
              "outputs"
            ],
            "type": "object"
          }
        },
        "required": [
          "dirspaces",
          "overall"
        ],
        "type": "object"
      },
      "work-manifest-tf-operation-result2": {
        "additionalProperties": false,
        "properties": {
          "steps": {
            "items": {
              "$ref": "#/components/schemas/workflow-step-output"
            },
            "type": "array"
          }
        },
        "required": [
          "steps"
        ],
        "type": "object"
      },
      "work-manifest-unsafe-apply": {
        "additionalProperties": false,
        "properties": {
          "base_ref": {
            "type": "string"
          },
          "changed_dirspaces": {
            "items": {
              "$ref": "#/components/schemas/work-manifest-dir"
            },
            "type": "array"
          },
          "config": {
            "type": null
          },
          "run_kind": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "type": {
            "const": "unsafe-apply",
            "type": "string"
          }
        },
        "required": [
          "base_ref",
          "changed_dirspaces",
          "config",
          "run_kind",
          "token",
          "type"
        ],
        "type": "object"
      },
      "workflow-output-apply": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/output-text"
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "type": {
                "const": "apply",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success"
        ],
        "type": "object"
      },
      "workflow-output-checkout": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/output-text"
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "type": {
                "const": "checkout",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success",
          "outputs"
        ],
        "type": "object"
      },
      "workflow-output-cost-estimation": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/output-text"
              },
              {
                "$ref": "#/components/schemas/output-cost-estimation"
              }
            ]
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "type": {
                "const": "cost-estimation",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success",
          "outputs"
        ],
        "type": "object"
      },
      "workflow-output-drift-create-issue": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/output-text"
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "type": {
                "const": "drift-create-issue",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success"
        ],
        "type": "object"
      },
      "workflow-output-env": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/output-text"
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "cmd": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "method": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "const": "env",
                "type": "string"
              }
            },
            "required": [
              "type",
              "cmd"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success"
        ],
        "type": "object"
      },
      "workflow-output-init": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/output-text"
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "type": {
                "const": "init",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success"
        ],
        "type": "object"
      },
      "workflow-output-oidc": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/output-text"
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "type": {
                "const": "oidc",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success"
        ],
        "type": "object"
      },
      "workflow-output-plan": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/output-text"
              },
              {
                "$ref": "#/components/schemas/output-plan"
              }
            ]
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "type": {
                "const": "plan",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success"
        ],
        "type": "object"
      },
      "workflow-output-run": {
        "additionalProperties": false,
        "properties": {
          "outputs": {
            "$ref": "#/components/schemas/output-text"
          },
          "success": {
            "type": "boolean"
          },
          "workflow_step": {
            "additionalProperties": false,
            "properties": {
              "cmd": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "exit_code": {
                "type": "integer"
              },
              "type": {
                "const": "run",
                "type": "string"
              }
            },
            "required": [
              "type",
              "cmd"
            ],
            "type": "object"
          }
        },
        "required": [
          "workflow_step",
          "success"
        ],
        "type": "object"
      },
      "workflow-outputs": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/workflow-output-apply"
            },
            {
              "$ref": "#/components/schemas/workflow-output-env"
            },
            {
              "$ref": "#/components/schemas/workflow-output-init"
            },
            {
              "$ref": "#/components/schemas/workflow-output-oidc"
            },
            {
              "$ref": "#/components/schemas/workflow-output-plan"
            },
            {
              "$ref": "#/components/schemas/workflow-output-run"
            }
          ]
        },
        "type": "array"
      },
      "workflow-step-output": {
        "additionalProperties": false,
        "properties": {
          "ignore_errors": {
            "type": "boolean"
          },
          "payload": {
            "additionalProperties": {
              "type": null
            },
            "properties": {},
            "type": "object"
          },
          "scope": {
            "$ref": "#/components/schemas/workflow-step-output-scope"
          },
          "step": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "ignore_errors",
          "location",
          "payload",
          "scope",
          "step",
          "success"
        ],
        "type": "object"
      },
      "workflow-step-output-scope": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/workflow-step-output-scope-dirspace"
          },
          {
            "$ref": "#/components/schemas/workflow-step-output-scope-run"
          }
        ]
      },
      "workflow-step-output-scope-dirspace": {
        "additionalProperties": false,
        "properties": {
          "dir": {
            "type": "string"
          },
          "type": {
            "const": "dirspace",
            "type": "string"
          },
          "workspace": {
            "type": "string"
          }
        },
        "required": [
          "dir",
          "workspace"
        ],
        "type": "object"
      },
      "workflow-step-output-scope-run": {
        "additionalProperties": false,
        "properties": {
          "flow": {
            "type": "string"
          },
          "subflow": {
            "type": "string"
          },
          "type": {
            "const": "run",
            "type": "string"
          }
        },
        "required": [
          "flow",
          "subflow"
        ],
        "type": "object"
      }
    }
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/github/v1/work-manifests/{work_manifest_id}": {
      "put": {
        "operationId": "work-manifest/results",
        "parameters": [
          {
            "in": "path",
            "name": "work_manifest_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/work-manifest-result"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {},
          "403": {}
        }
      }
    },
    "/api/github/v1/work-manifests/{work_manifest_id}/access-token": {
      "post": {
        "operationId": "work-manifest/get-access-token",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "access_token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access_token"
                  ],
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/github/v1/work-manifests/{work_manifest_id}/initiate": {
      "post": {
        "operationId": "work-manifest/initiate",
        "parameters": [
          {
            "in": "path",
            "name": "work_manifest_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/work-manifest-initiate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/work-manifest"
                }
              }
            }
          },
          "403": {}
        }
      }
    },
    "/api/github/v1/work-manifests/{work_manifest_id}/plans": {
      "get": {
        "operationId": "work-manifest/plan-get",
        "parameters": [
          {
            "in": "path",
            "name": "work_manifest_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dir",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "work-manifest/plan-create",
        "parameters": [
          {
            "in": "path",
            "name": "work_manifest_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/plan-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {},
          "403": {}
        }
      }
    },
    "/api/v1/admin/drifts": {
      "get": {
        "operationId": "admin/drifts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "results": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "completed_at": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "string"
                          },
                          "run_type": {
                            "$ref": "#/components/schemas/run-type"
                          },
                          "state": {
                            "type": "string"
                          },
                          "unlocked": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "created_at",
                          "id",
                          "name",
                          "owner",
                          "run_type",
                          "state",
                          "unlocked"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "results"
                  ],
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/github/client_id": {
      "get": {
        "operationId": "api_v1/client_id",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "client_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "client_id"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/installations/{installation_id}/dirspaces": {
      "get": {
        "operationId": "installations/list-dirspaces",
        "parameters": [
          {
            "in": "path",
            "name": "installation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "q",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "d",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tz",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "dirspaces": {
                      "items": {
                        "$ref": "#/components/schemas/installation-dirspace"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "dirspaces"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/installations/{installation_id}/pull-requests": {
      "get": {
        "operationId": "installations/list-pull-requests",
        "parameters": [
          {
            "in": "path",
            "name": "installation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "pr",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "pull_requests": {
                      "items": {
                        "$ref": "#/components/schemas/installation-pull-request"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "pull_requests"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/installations/{installation_id}/repos": {
      "get": {
        "operationId": "installations/list-repos",
        "parameters": [
          {
            "in": "path",
            "name": "installation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "repositories": {
                      "items": {
                        "$ref": "#/components/schemas/installation-repo"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "repositories"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/installations/{installation_id}/repos/refresh": {
      "post": {
        "operationId": "installations/repo-refresh",
        "parameters": [
          {
            "in": "path",
            "name": "installation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/installations/{installation_id}/work-manifests": {
      "get": {
        "operationId": "installations/list-work-manifests",
        "parameters": [
          {
            "in": "path",
            "name": "installation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "q",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "d",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tz",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "work_manifests": {
                      "items": {
                        "$ref": "#/components/schemas/installation-work-manifest"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "work_manifests"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/installations/{installation_id}/work-manifests/{work_manifest_id}": {
      "get": {
        "operationId": "installations/get-work-manifest",
        "parameters": [
          {
            "in": "path",
            "name": "installation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "work_manifest_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation-work-manifest"
                }
              }
            }
          },
          "403": {
            "content": {}
          },
          "404": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/installations/{installation_id}/work-manifests/{work_manifest_id}/outputs": {
      "get": {
        "operationId": "installations/get-work-manifest-outputs",
        "parameters": [
          {
            "in": "path",
            "name": "installation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "work_manifest_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "tz",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "steps": {
                      "items": {
                        "$ref": "#/components/schemas/installation-workflow-step-output"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "steps"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          },
          "404": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/server/config": {
      "get": {
        "operationId": "server/config",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/server-config"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{id}": {
      "get": {
        "operationId": "tasks/get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/task"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/user/installations": {
      "get": {
        "operationId": "user/list-installations",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "installations": {
                      "items": {
                        "$ref": "#/components/schemas/installation"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "installations"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    },
    "/api/v1/whoami": {
      "get": {
        "operationId": "user/whoami",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "403": {
            "content": {}
          }
        }
      }
    }
  }
}
